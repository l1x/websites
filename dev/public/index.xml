<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>l1x/dev</title>
    <link>http://dev.l1x.be/</link>
    <description>Recent content on l1x/dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 May 2020 22:02:43 +1100</lastBuildDate>
    
	<atom:link href="http://dev.l1x.be/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CloudClamp</title>
      <link>http://dev.l1x.be/project/cloudclamp/</link>
      <pubDate>Tue, 12 May 2020 14:31:21 +0200</pubDate>
      
      <guid>http://dev.l1x.be/project/cloudclamp/</guid>
      <description>CloudClamp </description>
    </item>
    
    <item>
      <title>Elafi</title>
      <link>http://dev.l1x.be/project/elafi/</link>
      <pubDate>Tue, 12 May 2020 14:31:21 +0200</pubDate>
      
      <guid>http://dev.l1x.be/project/elafi/</guid>
      <description>Elixir Ads Filter (ελάφι) https://en.wiktionary.org/wiki/ελάφι#Greek
Apps  dnsauth: authoritative nameserver, for lan dnscache: dns proxy and recursive resolver shades: blacklist/whitelist webui: settings &amp;amp; monitoring  Motivation Fighting ads supposed to be more accessible. I really like Pihole but it has more dependencies that I am comfortable with (dnsmasq, lighttpd, php, Bootstrap 3.x, etc.).
Dependecies I try to not to use any dependecies. Esqlite is a NIF based library. It might be worth to start up as a separate application.</description>
    </item>
    
    <item>
      <title>Moving to Hugo</title>
      <link>http://dev.l1x.be/posts/2020/05/12/moving-to-hugo/</link>
      <pubDate>Tue, 12 May 2020 14:31:21 +0200</pubDate>
      
      <guid>http://dev.l1x.be/posts/2020/05/12/moving-to-hugo/</guid>
      <description>Moving to Hugo After many years on Jekyll I think the time is right to move to Hugo.
?? </description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://dev.l1x.be/about/</link>
      <pubDate>Tue, 12 May 2020 22:02:43 +1100</pubDate>
      
      <guid>http://dev.l1x.be/about/</guid>
      <description>About Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Eget sit amet tellus cras. Integer eget aliquet nibh praesent tristique magna sit amet purus. Velit egestas dui id ornare arcu odio. Pellentesque sit amet porttitor eget. Ut tellus elementum sagittis vitae et leo duis ut. Neque laoreet suspendisse interdum consectetur libero id faucibus nisl tincidunt. Rhoncus mattis rhoncus urna neque viverra.</description>
    </item>
    
    <item>
      <title>Matching binary patterns</title>
      <link>http://dev.l1x.be/posts/2020/04/29/matching-binary-patterns/</link>
      <pubDate>Wed, 29 Apr 2020 14:31:21 +0200</pubDate>
      
      <guid>http://dev.l1x.be/posts/2020/04/29/matching-binary-patterns/</guid>
      <description>Matching binary patterns In Erlang, it is easy to construct binaries and bitstrings and matching binary patterns. I was running into Mitchell Perilstein&amp;rsquo;s excellent work on NTP with Erlang and I thought I am going to use this to explain how bitstrings and binaries work in Erlang.
Two concepts:
  A bitstring is a sequence of zero or more bits, where the number of bits does not need to be divisible by 8.</description>
    </item>
    
  </channel>
</rss>