<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloud on l1x/dev</title><link>https://dev.l1x.be/tags/cloud/</link><description>Recent content in cloud on l1x/dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 13 May 2020 14:31:21 +0200</lastBuildDate><atom:link href="https://dev.l1x.be/tags/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>CloudClamp</title><link>https://dev.l1x.be/projects/cloudclamp/</link><pubDate>Wed, 13 May 2020 14:31:21 +0200</pubDate><guid>https://dev.l1x.be/projects/cloudclamp/</guid><description>CloudClamp Type safe infrastructure as code with the full power of F#.
Why? I am tired of dealing with configuration files and interpreters that has the expresiveness of Go, safetiness of C and performance of Ruby. Illegal configuration must be made impossible by the type system. ADTs are great for this. Compilation has to check as much as possible and using all language features is a must. C# has libraries for pretty much every single vendor out there or it is trivial to implement the lacking support.</description></item></channel></rss>