<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fsharp on l1x/dev</title>
    <link>http://dev.l1x.be/tags/fsharp/</link>
    <description>Recent content in fsharp on l1x/dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 May 2020 14:31:21 +0200</lastBuildDate>
    
	<atom:link href="http://dev.l1x.be/tags/fsharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CloudClamp</title>
      <link>http://dev.l1x.be/projects/cloudclamp/</link>
      <pubDate>Wed, 13 May 2020 14:31:21 +0200</pubDate>
      
      <guid>http://dev.l1x.be/projects/cloudclamp/</guid>
      <description>CloudClamp Type safe infrastructure as code with the full power of F#.
Why? I am tired of dealing with configuration files and interpreters that has the expresiveness of Go, safetiness of C and performance of Ruby. Illegal configuration must be made impossible by the type system. ADTs are great for this. Compilation has to check as much as possible and using all language features is a must. C# has libraries for pretty much every single vendor out there or it is trivial to implement the lacking support.</description>
    </item>
    
    <item>
      <title>Why I chose Fsharp for our AWS Lambda project</title>
      <link>http://dev.l1x.be/posts/2020/05/08/why-i-chose-fsharp-for-our-aws-lambda-project/</link>
      <pubDate>Fri, 08 May 2020 14:31:21 +0200</pubDate>
      
      <guid>http://dev.l1x.be/posts/2020/05/08/why-i-chose-fsharp-for-our-aws-lambda-project/</guid>
      <description>Why I chose Fsharp for our AWS Lambda project The dilema I wanted to create a simple Lambda function to be able to track how our users use the website and the web application without a 3rd party and a ton of external dependencies, especially avoiding 3rd party Javascript and leaking out data to mass surveillance companies. The easiest way is to use a simple tracking 1x1 pixel or beacon that collects just the right amount of information (strictly non-PII).</description>
    </item>
    
  </channel>
</rss>