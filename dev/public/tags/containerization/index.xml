<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>containerization on l1x/dev</title><link>https://dev.l1x.be/tags/containerization/</link><description>Recent content in containerization on l1x/dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 22 Nov 2020 14:25:21 +0100</lastBuildDate><atom:link href="https://dev.l1x.be/tags/containerization/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started with Firecracker on Raspberry Pi</title><link>https://dev.l1x.be/posts/2020/11/22/getting-started-with-firecracker-on-raspberry-pi/</link><pubDate>Sun, 22 Nov 2020 14:25:21 +0100</pubDate><guid>https://dev.l1x.be/posts/2020/11/22/getting-started-with-firecracker-on-raspberry-pi/</guid><description>Abstract Traditionally services were deployed on bare metal and in the last decades we have seen the rise of virtualization (running additional operating systems in a operating system process) and lately containerization (running an operating system process in a separate security context from the rest of processes on the same host). Virtualization and containerization offers different levels of isolation by moving some operating system functionality to the guest systems.
The following chart illustrates that pretty well:</description></item></channel></rss>